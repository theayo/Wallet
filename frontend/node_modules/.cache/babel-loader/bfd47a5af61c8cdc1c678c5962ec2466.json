{"ast":null,"code":"import axios from \"axios\";\nexport default class APIService {\n  static UpdateArticle(article_id, body, token) {\n    return fetch(`http://127.0.0.1:8000/api/articles/${article_id}/`, {\n      'method': 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static InsertArticle(body, token) {\n    return fetch('http://127.0.0.1:8000/api/articles/', {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static DeleteArticle(article_id, token) {\n    return fetch(`http://127.0.0.1:8000/api/articles/${article_id}/`, {\n      'method': 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    });\n  }\n\n  static LoginUser(body) {\n    console.log(body);\n    return fetch('http://127.0.0.1:8000/auth/token/login/', {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(resp => {\n      const token = resp.json().data.auth_token;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n    });\n  }\n\n  static RegisterUser(body) {\n    console.log(body);\n    return fetch('http://127.0.0.1:8000/auth/users/', {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n  static GetLoginUser(body) {\n    console.log(body);\n    return fetch('http://127.0.0.1:8000/auth/token/login/', {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n\n}\n\nAPIService.authLogin = (username, password) => {\n  return dispatch => {\n    dispatch();\n    axios.post('http://127.0.0.1:8000/auth/token/login/', {\n      username: username,\n      password: password\n    }).then(res => {\n      const token = res.data.auth_token;\n      localStorage.setItem('token', token);\n    });\n  };\n};","map":{"version":3,"names":["axios","APIService","UpdateArticle","article_id","body","token","fetch","headers","JSON","stringify","then","resp","json","InsertArticle","DeleteArticle","LoginUser","console","log","data","auth_token","expirationDate","Date","getTime","localStorage","setItem","RegisterUser","GetLoginUser","authLogin","username","password","dispatch","post","res"],"sources":["/home/francua/Wallet/frontend/src/Component/APIService.js"],"sourcesContent":["\nimport axios from \"axios\";\n\nexport default class APIService {\n\n  static UpdateArticle(article_id, body, token) {\n\n    return fetch(`http://127.0.0.1:8000/api/articles/${article_id}/`, {\n      'method': 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(body)\n\n    }).then(resp => resp.json())\n\n\n  }\n\n  static InsertArticle(body, token) {\n\n    return fetch('http://127.0.0.1:8000/api/articles/', {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(body)\n\n    }).then(resp => resp.json())\n\n  }\n\n  static DeleteArticle(article_id, token) {\n\n    return fetch(`http://127.0.0.1:8000/api/articles/${article_id}/`, {\n      'method': 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n\n    })\n\n  }\n\n  static LoginUser(body) {\n    console.log(body)\n    return fetch('http://127.0.0.1:8000/auth/token/login/', {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n\n      },\n      body: JSON.stringify(body)\n\n    }).then(resp => {\n      const token = resp.json().data.auth_token;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n    })\n\n  }\n\n\n  static RegisterUser(body) {\n    console.log(body)\n    return fetch('http://127.0.0.1:8000/auth/users/', {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n\n      },\n      body: JSON.stringify(body)\n\n    }).then(resp => resp.json())\n\n  }\n\n  static GetLoginUser(body) {\n    console.log(body)\n    return fetch('http://127.0.0.1:8000/auth/token/login/', {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n\n      },\n      body: JSON.stringify(body)\n\n    }).then(resp => resp.json())\n\n  }\n\n  static authLogin = (username, password) => {\n    return dispatch => {\n        dispatch();\n    \n        axios.post('http://127.0.0.1:8000/auth/token/login/', {\n            username: username,\n            password: password\n        })\n        .then(res => {\n            const token = res.data.auth_token;\n\n            localStorage.setItem('token', token);\n        })\n    }\n}\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}